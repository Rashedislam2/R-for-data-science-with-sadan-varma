v1 = 1:20
print(v1)
v2 = seq(1,20)
print(v2)
v2 = seq(1,20)
print(v2)
is.vector(var1)
v2 = seq(1,20,by=2)
print(v2)
v3 =c(2,3,5,4,6,7,24,15,36)
sorted_value=sort(v3)
v3 =c(2,3,5,4,6,7,24,15,36)
sorted_value=sort(v3)
print(sorted_value)
install.packages("nycflight13")
nycflight13
install.packages("nycflight13")
install.packages("nycflight13")
install.packages("ggplot2")
library(ggplot2)
data.set = mtcars
data.set
data.set = mtcars
data.set
data.set
View(data.set)
#generating a basic scatter plot
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point()
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2)
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=4)
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3)
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=2)
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=1
)
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=4 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=5 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=6 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=7 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=8 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=9 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=3,shape=10 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=4,shape=10 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=4,shape=16 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=16 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 )
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 ) + geom
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 ) +geom
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 ) +
geom
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 ) +
geom
ggplot(data.set,aes(x=wt,y=mpg)) +
geom_point(size=2,shape=17 ) +
geom_smooth(method = lm)
library(psych)
data()
AirPassengers
attach(nycflights13::flight)
attach(nycflights13::flights)
head(nycflights13::flights)
summary(distance)
describe(distance)
demo=cbind(arr_delay,dep_delay,distance)
demo
describe(demo)
colnames(demo)=c('arrival dealay','deperture delay','distance')
demo
colnames(demo)=c('arrival dealay','deperture delay','distance')
demo
dep_delay
hist(dep_delay)
carrier
carrierfact=factor(carrier)
class(carrierfact)
summary(carrierfact)
describe(carrierfact)
describe.by(distance,group=carrier)
aggregate(distance,by=list(carrier,month),FUN=mean,na.rm=TRUE)
library(nycflights13)
head(nycflights13::airlines)
head(nycflights13::planes)
seats
nycflights13::planes$seats
dataset= nycflights13::planes$seats
describe(dataset)
library(psych)
describe(dataset)
summary(dataset)
head(nycflights13::planes)
aggregate(model~seats,data=dataset,FUN = mean)
aggregate(model~seats,FUN = mean)
aggregate(model~seats,data=dataset,FUN = mean)
head(nycflights13::flights)
dep_time
hour
head(nycflights13::flights)
dep_time
library(nycflights13)
head(nycflights13::flights)
distance
distance
attach(nycflights13)
attach(nycflights13::flights)
head(nycflights13::flights)
distance
attach(nycflights13::weather)
head(nycflights13::weather)
humid
temp
aggregate(humid~temp,FUN=mean,na.rm=TRUE)
library(ggplot2)
ggplot(weather,aes(x=temp,y=humid))+
geom_point()
ggplot(weather,aes(x=temp,y=humid))+
geom_point(color='blue',size=0.1,shape=10)
ggplot(weather,aes(x=temp,y=humid))+
geom_point(color='blue',size=0.1,shape=10)+
geom_smooth(method=lm)
#loading the dataset
mydata = ToothGrowth
mydata
#converting the variable dose from a numeric to a factor variable
mydata$dose = as.factor(mydata$dose)
class (mydata$dose)
#basic box plot
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot()
#basic box plot
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot()
library(ggplot2)
#basic box plot
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot()
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot() +
coord_flip()
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot() +
coord_flip()
#Notched box plot
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(notch = T)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red")
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 7,outlier.size = 7)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 7,outlier.size = 5)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 5,outlier.size = 5)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 10,outlier.size = 5)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 10,outlier.size = 3)
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot(outlier.color = "red",outlier.shape = 10,outlier.size = 3) +
scale_x_discrete(limits=c("0.5","2"))
ggplot(mydata,aes(x = dose,y=len,color = dose)) +
geom_boxplot(outlier.color = "red",outlier.shape = 10,outlier.size = 3) +
ggplot(mydata,aes(x = dose,y=len,color = dose)) +
geom_boxplot(outlier.color = "red",outlier.shape = 10,outlier.size = 3)
ggplot(mydata,aes(x = dose,y=len,color = dose)) +
geom_boxplot()
ggplot(mydata,aes(x = dose,y=len)) +
geom_boxplot()+
scale_x_discrete(limit=c("2","1","0.5"))
ggplot(mydata,aes(x = dose,y=len,color=dose)) +
geom_boxplot()+
scale_x_discrete(limit=c("2","1","0.5"))
ggplot(mydata,aes(x = dose,y=len,fill = supp)) +
geom_boxplot()
ggplot(mydata,aes(x = dose,y=len,fill = supp)) +
geom_boxplot(position = position_dodge(1))
ggplot(mydata,aes(x = dose,y=len,fill = supp)) +
geom_boxplot(position = position_dodge(2))
ggplot(mydata,aes(x = dose,y=len,fill = supp)) +
geom_boxplot(position = position_dodge(1.5))
ggplot(mydata,aes(x = dose,y=len,fill = supp)) +
geom_boxplot(position = position_dodge(1))
theme(plot.title = element_text(face = "bold",size= 10,hjust = 5))
#styling plots for publications
library(ggplot2)
#install.packages("ggthemes")
library(ggthemes)
#install.packages("viridis")
library(viridis)
#sample data loading
df=mtcars
df
df$cyl = as.factor(df$cyl)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14,base_family = "serif")
theme(plot.title = element_text(face = "bold",size= 10,hjust = 5))
theme(plot.title = element_text(face = "bold",size= 10,hjust = 10))
theme(plot.title = element_text(face = "bold",size= 10,hjust = 10))
theme(plot.title = element_text(face = "bold",size= 10,hjust = 10),
axis.title = element_text(face="bold",size=2)
)
theme(plot.title = element_text(face = "bold",size= 10,hjust = 10),
axis.title = element_text(face="bold",size=2)
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=5)
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15)
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "top"
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right"
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right",
legend.title =element_text(face = "bold")
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right",
legend.title =element_text(face = "bold"),
legend.text = element_text(size = 10)
)
ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right",
legend.title =element_text(face = "bold"),
legend.text = element_text(size = 12)
)
p = ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right",
legend.title =element_text(face = "bold"),
legend.text = element_text(size = 12)
)
#saving the plot for publication
ggsave("publication_ggplot.png",p,width = 6,height = 4,dpi = 300)
p = ggplot(df,aes(x=wt,y=mpg,color=cyl)) +
geom_point(size=2) +
scale_color_viridis_d(name="cylinders") +
labs(title ="fuel efficiency by car weight" ,
x="weight(1000lbs)",
y="miles per gallon",
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text=element_text(size=15),
legend.position = "right",
legend.title =element_text(face = "bold"),
legend.text = element_text(size = 12)
)
ggsave("publication_ggplot.png",p,width = 6,height = 4,dpi = 300)
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
p = ggplot(df, aes(x = wt, y = mpg, color = cyl)) +
geom_point(size = 3) +
scale_color_viridis_d(name = "Cylinders") +
labs(
title = "Fuel Efficiancy by Car Weight",
x = "Weight (1000 lbs)",
y = "Miles per Gallon"
) +
theme_classic(base_size = 14, base_family = "serif") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 12)
)
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
setwd("E:/r git hub/R-for-data-science-with-sadan-varma/RDSML-Day-22 👉 Central Limit Theorem Using R")
